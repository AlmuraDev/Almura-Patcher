From a66a2115d0db41639f78ac5da6ec96e294a70451 Mon Sep 17 00:00:00 2001
From: Steven Downer <grinch@outlook.com>
Date: Fri, 4 Oct 2013 15:10:20 -0500
Subject: [PATCH] (Almura) Add ability to remove scores per player, per
 objective


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 4ca487c..d3ef6d6 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -1163,7 +1163,7 @@ public final class CraftServer implements Server {
     }
 
     public void setWhitelist(boolean value) {
-        playerList.setHasWhitelist(value); // AEM
+        playerList.setHasWhitelist(value); // Almura
         console.getPropertyManager().a("white-list", value);
     }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScore.java b/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScore.java
index 0ffbe9b..1b8f849 100644
--- a/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScore.java
+++ b/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScore.java
@@ -3,6 +3,7 @@ package org.bukkit.craftbukkit.scoreboard;
 import java.util.Map;
 
 import net.minecraft.server.Scoreboard;
+import net.minecraft.server.ScoreboardObjective; // Almura
 import net.minecraft.server.ScoreboardScore;
 
 import org.bukkit.Bukkit;
@@ -53,4 +54,23 @@ final class CraftScore implements Score {
     public CraftScoreboard getScoreboard() {
         return objective.getScoreboard();
     }
+
+    // Almura Start
+    public boolean isSet() throws IllegalStateException {
+        return objective.checkState().board.getPlayerObjectives(playerName).containsKey(objective.getHandle());
+    }
+
+    public void reset() throws IllegalStateException {
+        CraftScoreboard myBoard = objective.checkState();
+        Map<ScoreboardObjective, ScoreboardScore> savedScores = myBoard.board.getPlayerObjectives(playerName);
+        if (savedScores.remove(objective.getHandle()) == null) {
+            // If they don't have a score to delete, don't delete it.
+            return;
+        }
+        myBoard.board.resetPlayerScores(playerName);
+        for (Map.Entry<ScoreboardObjective, ScoreboardScore> e : savedScores.entrySet()) {
+            myBoard.board.getPlayerScoreForObjective(playerName, e.getKey()).setScore(e.getValue().getScore());
+        }
+    }
+    // Almura End
 }
-- 
1.9.0.msysgit.0

