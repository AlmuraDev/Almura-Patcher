From 3a853e34e7652c86fcb6f4febc698ad8ccf4dd86 Mon Sep 17 00:00:00 2001
From: Steven Downer <grinch@outlook.com>
Date: Wed, 2 Oct 2013 16:58:14 -0500
Subject: [PATCH] (AEM) Version Spoofing

- Enables the ability to spoof the protocol version
- Enables the ability to spoof the minecraft version
- If disabled, anything entered for the minecraft and protocol versions
  will be ignored. If enabled those will both be used explicitly. Protocol
  version and Minecraft version must match in order for the client to
  accept it. For example, 1.6.1 would require the protocol version of '73'
  with the minecraft verison of '1.6.1'.

diff --git a/src/main/java/net/minecraft/server/PendingConnection.java b/src/main/java/net/minecraft/server/PendingConnection.java
index 358cba4..8d7877b 100644
--- a/src/main/java/net/minecraft/server/PendingConnection.java
+++ b/src/main/java/net/minecraft/server/PendingConnection.java
@@ -11,6 +11,8 @@ import java.util.List;
 import java.util.Random;
 import javax.crypto.SecretKey;
 
+import org.spigotmc.SpigotConfig; // AEM
+
 public class PendingConnection extends Connection {
 
     private static Random random = new Random();
@@ -25,6 +27,8 @@ public class PendingConnection extends Connection {
     private boolean j;
     private SecretKey k;
     public String hostname = ""; // CraftBukkit - add field
+    private int protocolVersion = SpigotConfig.versionSpoof ? SpigotConfig.protocolVersion : 78; // AEM
+    private String minecraftVersion = SpigotConfig.versionSpoof ? SpigotConfig.minecraftVersion : MinecraftServer.getServer().getVersion(); // AEM
 
     public PendingConnection(MinecraftServer minecraftserver, org.spigotmc.netty.NettyNetworkManager networkManager) {
         this.server = minecraftserver;
@@ -78,8 +82,8 @@ public class PendingConnection extends Connection {
             } else {
                 PublicKey publickey = this.server.H().getPublic();
 
-                if (packet2handshake.d() != 78) {
-                    if (packet2handshake.d() > 78) {
+                if (packet2handshake.d() != protocolVersion) { // AEM
+                    if (packet2handshake.d() > protocolVersion) { // AEM
                         this.disconnect(org.spigotmc.SpigotConfig.outdatedServerMessage); // Spigot
                     } else {
                         this.disconnect(org.spigotmc.SpigotConfig.outdatedClientMessage); // Spigot
@@ -159,7 +163,7 @@ public class PendingConnection extends Connection {
                 s = pingEvent.getMotd() + "\u00A7" + playerlist.getPlayerCount() + "\u00A7" + pingEvent.getMaxPlayers();
             } else {
                 // CraftBukkit start - Don't create a list from an array
-                Object[] list = new Object[] { 1, 78, this.server.getVersion(), pingEvent.getMotd(), playerlist.getPlayerCount(), pingEvent.getMaxPlayers() };
+                Object[] list = new Object[] { 1, protocolVersion, minecraftVersion, pingEvent.getMotd(), playerlist.getPlayerCount(), pingEvent.getMaxPlayers() }; // AEM
 
                 StringBuilder builder = new StringBuilder();
                 for (Object object : list) {
diff --git a/src/main/java/org/spigotmc/SpigotConfig.java b/src/main/java/org/spigotmc/SpigotConfig.java
index 6c0a14d..7700279 100644
--- a/src/main/java/org/spigotmc/SpigotConfig.java
+++ b/src/main/java/org/spigotmc/SpigotConfig.java
@@ -292,4 +292,24 @@ public class SpigotConfig
         commands.put( "restart", new RestartCommand( "restart" ) );
         WatchdogThread.doStart( timeoutTime, restartOnCrash );
     }
+
+    // AEM Start
+    public static int protocolVersion;
+    private static void protocolVersion()
+    {
+        protocolVersion = getInt( "settings.version-spoof.protocol", 78 ); // TODO: Keep updated with Minecraft Protocol Version
+    }
+
+    public static String minecraftVersion;
+    private static void minecraftVersion()
+    {
+        minecraftVersion = getString( "settings.version-spoof.minecraft-version", MinecraftServer.getServer().getVersion() );
+    }
+
+    public static boolean versionSpoof;
+    private static void versionSpoof()
+    {
+        versionSpoof = getBoolean( "settings.version-spoof.enabled", false );
+    }
+    // AEM End
 }
-- 
1.8.3.msysgit.0

